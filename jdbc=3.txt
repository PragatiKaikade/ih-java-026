Steps to develop first jdbc application to select the records from student table
================================================================================







package com.ihub.www;

//ctrl+shift+o
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;


public class SelectApp 
{
	public static void main(String[] args)throws Exception 
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		String qry="select * from student";
		ResultSet rs=st.executeQuery(qry);
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		rs.close();
		st.close();
		con.close();
	}
}

Q)Write a jdbc application to select student name and student address based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;

public class SelectApp2 
{
	public static void main(String[] args)throws Exception 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="select sname,sadd from student where sno="+no;
		
		ResultSet rs=st.executeQuery(qry);
		
		int cnt=0;
		while(rs.next())
		{
			System.out.println(rs.getString(1)+" "+rs.getString(2));
			cnt=1;
		}
		
		if(cnt==0)
			System.out.println("No rows selected");
		
		rs.close();
		st.close();
		con.close();
	}
}

Non-Select Queries
=================

Q) Write a jdbc application to insert a record into student table?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class InsertApp {

	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		System.out.println("Enter the student address :");
		String add=sc.next();
		
		//converting string inputs according to SQL query
		name="'"+name+"'";
		add="'"+add+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="insert into student values("+no+","+name+","+add+")";
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record inserted");
		else
			System.out.println(result+" Record inserted");
		
		st.close();
		con.close();
	}

}

Q)Write a jdbc application to update student name based on student number?


package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class UpdateApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		System.out.println("Enter the student name :");
		String name=sc.next();
		
		//converting string input according to sql query.
		name="'"+name+"'";
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="update student set sname="+name+" where sno="+no;
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record Updated");
		else
			System.out.println(result+" Record Updated");
		
		st.close();
		con.close();
		
	}
}

Q)Write a jdbc application to delete  student record based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

public class DeleteApp 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no=sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		Statement st=con.createStatement();
		
		String qry="delete from student where sno="+no;
		
		int result=st.executeUpdate(qry);
		
		if(result==0)
			System.out.println("No Record Deleted");
		else
			System.out.println(result+" Record Deleted");
		
		st.close();
		con.close();
		
		
	}
}

Type1 JDBC driver Architecture / JDBC-ODBC Bridge Driver
=========================================================
Type1 JDBC driver is not designed to interact with database software directly.

It is designed to take the support of ODBC driver and Vendor DB library.

Diagram: jdbc3.1

Advantages:

> It is a built-in driver of JDK.

> Using Type1 JDBC driver we can interact with any database software. 

Disadvantages:

> This driver performance is low.

> It is not suitable for medium and large scale projects.Hence it is not a industry standard 
  driver.

> To work with Type1 JDBC driver we need to arrange ODBC driver and vendor db library.

> Since ODBC driver and vendor db library present at client side so it not suitable for 
  untrusted applets to database communication.


Type2 JDBC driver Architecture / Native API 
============================================
Type2 JDBC driver is not designed to interact with database software directly.

It is designed to take the support of vendor db library.

Diagram: jdbc3.2

Advantages:

> Type2 JDBC driver will give better performance when compare to Type1 JDBC driver.

> Type2 JDBC driver will not take the support of ODBC driver.

Disadvantages:

> This driver peformance is quit slow.

> It is not suitable for medium and large scale projects.Hence it is not a industry standard
  driver.

> To work with type2 jdbc driver we need to arrange vendor db library.

> Since vendor db library present at client side so it is not suitable for untrusted applets 
  to database communication.

Type4 JDBC driver Architecture / Native Protocol (thin driver) 
==============================================================
Type4 JDBC driver is not designed to take the support of ODBC driver and vendor db library.

It is designed to interact with database software directly.

Diagram: jdbc3.3 

Advantages:

> This driver will give better performance when compare to type1 and type2 jdbc drivers.

> It is suitable for medium and large scale projects.Hence it is a industry standard driver.

> It is completely developed by using java so it will give platform independency.

> Type4 JDBC driver will not take the support of ODBC driver and vendor db library.

> Since ODBC driver and vendor db library not present at client side so it is suitable to 
  perform untrusted applets to database communication.

Disadvantages:

> It is not a built-in driver of JDK.

> For every database we need to arrange type4 JDBC driver seperately.










































































































